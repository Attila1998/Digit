////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : frekoszto.vf
// /___/   /\     Timestamp : 04/11/2019 13:36:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog "D:/Digit 2/FrekOszto/frekoszto/frekoszto.vf" -w "D:/Digit 2/FrekOszto/frekoszto/frekoszto.sch"
//Design Name: frekoszto
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FJKC_MXILINX_frekoszto(C, 
                              CLR, 
                              J, 
                              K, 
                              Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input J;
    input K;
   output Q;
   
   wire AD;
   wire A0;
   wire A1;
   wire A2;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   (* RLOC = "X0Y0" *) 
   FDC  I_36_32 (.C(C), 
                .CLR(CLR), 
                .D(AD), 
                .Q(Q_DUMMY));
   AND3B2  I_36_37 (.I0(J), 
                   .I1(K), 
                   .I2(Q_DUMMY), 
                   .O(A0));
   AND3B1  I_36_40 (.I0(Q_DUMMY), 
                   .I1(K), 
                   .I2(J), 
                   .O(A1));
   OR3  I_36_41 (.I0(A2), 
                .I1(A1), 
                .I2(A0), 
                .O(AD));
   AND2B1  I_36_43 (.I0(K), 
                   .I1(J), 
                   .O(A2));
endmodule
`timescale 1ns / 1ps

module frekoszto(a, 
                 b, 
                 MCLK, 
                 kimenet, 
                 szegm);

    input a;
    input b;
    input MCLK;
   output kimenet;
   output [7:0] szegm;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire kimenet_DUMMY;
   
   assign kimenet = kimenet_DUMMY;
   Logika  XLXI_1 (.a(a), 
                  .b(b), 
                  .Q0(XLXN_1), 
                  .Q1(XLXN_2), 
                  .Q2(kimenet_DUMMY), 
                  .J0(XLXN_15), 
                  .J1(XLXN_13), 
                  .J2(XLXN_9), 
                  .K0(XLXN_16), 
                  .K1(XLXN_14), 
                  .K2(XLXN_10));
   dekodolo  XLXI_2 (.A(XLXN_1), 
                    .B(XLXN_2), 
                    .C(kimenet_DUMMY), 
                    .D(XLXN_19), 
                    .szegm(szegm[7:0]));
   Orajel  XLXI_3 (.clk_in(MCLK), 
                  .reset(XLXN_21), 
                  .clk_out(XLXN_22));
   (* HU_SET = "XLXI_4_0" *) 
   FJKC_MXILINX_frekoszto #( .INIT(1'b0) ) XLXI_4 (.C(XLXN_22), 
                                  .CLR(XLXN_20), 
                                  .J(XLXN_15), 
                                  .K(XLXN_16), 
                                  .Q(XLXN_1));
   (* HU_SET = "XLXI_5_1" *) 
   FJKC_MXILINX_frekoszto #( .INIT(1'b0) ) XLXI_5 (.C(XLXN_22), 
                                  .CLR(XLXN_20), 
                                  .J(XLXN_13), 
                                  .K(XLXN_14), 
                                  .Q(XLXN_2));
   (* HU_SET = "XLXI_6_2" *) 
   FJKC_MXILINX_frekoszto #( .INIT(1'b0) ) XLXI_6 (.C(XLXN_22), 
                                  .CLR(XLXN_20), 
                                  .J(XLXN_9), 
                                  .K(XLXN_10), 
                                  .Q(kimenet_DUMMY));
   GND  XLXI_7 (.G(XLXN_19));
   GND  XLXI_8 (.G(XLXN_20));
   VCC  XLXI_9 (.P(XLXN_21));
endmodule
